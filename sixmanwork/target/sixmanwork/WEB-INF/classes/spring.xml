<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
">

    <!--扫描注解-->
    <context:component-scan base-package="com"></context:component-scan>

    <!--配置视图解析器,全局默认跳转为.jsp文件-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--配置静态资源-->
    <mvc:resources mapping="/css/**" location="/css/"></mvc:resources>
    <mvc:resources mapping="/js/**" location="/js/"></mvc:resources>
    <mvc:resources mapping="/images/**" location="/images/"></mvc:resources>
    <mvc:resources mapping="/resource/**" location="/resource/"></mvc:resources>

    <!--配置静态资源-->
    <mvc:annotation-driven></mvc:annotation-driven>
    <!--会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的。-->


    <!--配置事务-->
    <bean id="tx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="db"></property>
    </bean>
    <tx:advice id="ad" transaction-manager="tx"></tx:advice>
    <!--注解管理事务-->
    <tx:annotation-driven transaction-manager="tx"/>



    <!--文件上传  id的名字不能随便起-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"></property>
        <property name="maxUploadSize" value="10485760"></property>
        <!--maxUploadSize , 字节为单位传输-->
    </bean>

    <!--连接数据库-->
    <bean id="db" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/projectmessagesystem"></property>
        <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
        <property name="user" value="root"></property>
        <property name="password" value="123"></property>
    </bean>

    <bean  id="fac" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="db"></property>
        <property name="mapperLocations" value="classpath:/mapper/*.xml"></property>
        <property name="configLocation" value="classpath:mybatis.xml"></property>
    </bean>

    <!--没有下面这段代码,注解创建dao层对象失败-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dao"></property>
        <property name="sqlSessionFactory" ref="fac"></property>
    </bean>

    <!--activiti配置-->
    <bean id="process" class="org.activiti.spring.SpringProcessEngineConfiguration">
        <!--数据源,事务,数据库有没有,没有创建-->
        <property name="dataSource" ref="db"></property>
        <property name="transactionManager" ref="tx"></property>
        <property name="databaseSchemaUpdate" value="true"></property>
    </bean>

    <!--创建引擎对象-->
    <bean id="processengne" class="org.activiti.spring.ProcessEngineFactoryBean">
        <property name="processEngineConfiguration" ref="process"></property>
    </bean>

    <!--创建流程服务-->
    <bean id="repositorService" factory-bean="processengne" factory-method="getRepositoryService"></bean>
    <bean id="runtimeService" factory-bean="processengne" factory-method="getRuntimeService"></bean>
    <bean id="taskService" factory-bean="processengne" factory-method="getTaskService"></bean>
    <bean id="historyService" factory-bean="processengne" factory-method="getHistoryService"></bean>
    <bean id="formService" factory-bean="processengne" factory-method="getFormService"></bean>





</beans>